import SwiftUI

// Generated by Supernova - do not modify manually
public extension View {

    // Shadow

    // Dark

    func shadowShadowDarkHigh() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.2), radius: 12, x: 0, y: 4) 
    }

    func shadowShadowDarkHigh2() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.2), radius: 4, x: 0, y: 4) 
    }

    func shadowShadowDarkMedium() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.2), radius: 8, x: 0, y: 3) 
    }

    func shadowShadowDarkLow() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.2), radius: 4, x: 0, y: 2) 
    }

    // Light

    func shadowShadowLightHigh() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.1), radius: 12, x: 0, y: 4) 
    }

    func shadowShadowLightHigh2() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.1), radius: 4, x: 0, y: 4) 
    }

    func shadowShadowLightMedium() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.1), radius: 8, x: 0, y: 3) 
    }

    func shadowShadowLightLow() -> some View {
        return self.shadow(color: Color(.sRGB, red: 29/255, green: 29/255, blue: 27/255, opacity: 0.1), radius: 4, x: 0, y: 2) 
    }
}